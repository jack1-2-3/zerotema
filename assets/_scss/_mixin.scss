@charset "UTF-8";

@mixin flexbox {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

@mixin flexbox_right {
    display: flex;
    align-items: center;
    justify-content: flex-end;
}

@mixin inline-flexbox {
    display: inline-flex;
    align-items: center;
    justify-content: space-between;
}

@mixin pcSm {
    //PC小の場合
    @media only screen and (min-width: $bpPcSm) {
        @content;
    }
}
@mixin tabletL {
    //タブレット横の場合
    @media only screen and (max-width: $bpTabletL) {
        @content;
    }
}
@mixin tabletP {
    //タブレット縦の場合
    @media only screen and (max-width: $bpTabletP) {
        @content;
    }
}
@mixin tabletPO {
    //タブレット縦の場合
    @media only screen and (min-width: $bpTabletPO) {
        @content;
    }
}
@mixin sphoneL {
    //スマートフォン横の場合
    @media only screen and (max-width: $bpSphoneL) {
        @content;
    }
}
@mixin sphone7 {
    //スマートフォン縦の場合
    @media only screen and (max-width: $bpSphone7) {
        @content;
    }
}
@mixin sphoneSE {
    //iPhoneSEの場合
    @media only screen and (max-width: $bpSphoneSE) {
        @content;
    }
}

// hidetext
@mixin hidetext {
    @include hide-text;
}
//before,after疑似要素初期設定
@mixin bfaf($w, $h) {
    content: '';
    display: block;
    width: $w;
    height: $h;
}
//天地中央
@mixin tbCenter {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    margin: auto;
}
//左右中央
@mixin lrCenter {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    margin: auto;
}
//ボーダー付ボックススタイルベーシック
@mixin bd($width) {
    border: solid $width #eee;
}
//ボーダー付ボックススタイルベーシック
@mixin bdboxbasic($width) {
    border: solid $width #eee;
    box-sizing: border-box;
    display: block;
}
// border-radius
@mixin border-radius($radius) {
    @include border-top-radius($radius);
    @include border-right-radius($radius);
    @include border-bottom-radius($radius);
    @include border-left-radius($radius);
}

//PC用フォントサイズ
@function get_vw($size, $viewport: 1400) {
    $rate: ceil($size / $viewport);
    @return $rate * 1vw;
}
@mixin fz_vw($font_size: 10) {
    font-size: $font_size * 1px;
    font-size: get_vw($font_size);
    @media only screen and (min-width: 1400px) {
        font-size: $font_size * 1px !important;
    }
}

//SP用フォントサイズ
@function get_vwSP($size, $viewport: 834) {
    $rate: ceil($size / $viewport);
    @return $rate * 1vw;
}

@mixin fz_vwSP($font_size: 10) {
    font-size: $font_size * 1px;
    font-size: get_vwSP($font_size);
}

//相対幅
@function wRelative($size, $wrapsize) {
    @return floor((($size / $wrapsize) * 10000%)) / 100;
}

//最大幅
@mixin mW($size) {
    width: 100%;
    max-width: $size;
}

@mixin blur($blur: 4px) {
    filter: blur($blur);
}
@mixin sepia($sepia: 0.8) {
    filter: sepia($sepia);
}

@mixin linkColor($color) {
    color: $color;
}
